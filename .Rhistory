barchart <- function(df, x, title) {
require(plotly)
# Calculate frequency count of categories
freq_count <- table(df[[x]])
# Convert frequency count to a data frame
df_freq <- as.data.frame(freq_count)
colnames(df_freq) <- c("Categories", "Frequency")
# Plot bar graph
p <- plot_ly(df_freq, x = ~Categories, y = ~Frequency, type = "bar", marker = list(color = 'red', opacity = 0.7)) %>%
layout(title = title,
xaxis = list(title = "Categories"),
yaxis = list(title = "Frequency"),
showlegend = FALSE,
bargap = 0.05)
return(p)
}
barchart <- function(df, x, title) {
require(plotly)
# Calculate frequency count of categories
freq_count <- table(df[[x]])
# Convert frequency count to a data frame
df_freq <- as.data.frame(freq_count)
colnames(df_freq) <- c("Categories", "Frequency")
# Plot bar graph
p <- plot_ly(df_freq, x = ~Categories, y = ~Frequency, type = "bar", marker = list(color = 'red', opacity = 0.7)) %>%
layout(title = title,
xaxis = list(title = "Categories"),
yaxis = list(title = "Frequency"),
showlegend = FALSE,
bargap = 0.05)
return(p)
}
barchart <- function(df, x, title) {
require(ggplot2)
require(plotly)
# Calculate frequency count of categories
freq_count <- table(df[[x]])
# Convert frequency count to a data frame
df_freq <- as.data.frame(freq_count)
colnames(df_freq) <- c("Categories", "Frequency")
# Create ggplot object
p <- ggplot(df_freq, aes_string(x = "Categories", y = "Frequency")) +
geom_bar(fill = "red", alpha = 0.7, stat = "identity") +
geom_text(aes(label = Frequency), vjust = -0.5) +
labs(title = title,
x = "Categories",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
}
convert_to_kable <- function(table_list) {
require(tidyverse)
require(kableExtra)
# Initialize an empty list to store the kable outputs
table_kables <- list()
# Iterate over each table in the list
for (i in seq_along(table_list)) {
# Extract EuroStandard levels from the current table
euro_standard <- attr(table_list[[i]], "dimnames")[["EuroStandard"]]
# Convert the tabyl object to a data frame
tbl_df <- as.data.frame(table_list[[i]])
# Create the kable
kbl_tbl <- tbl_df %>%
kbl(caption = paste("Summary table of vehicles by taxi status for EuroStandard", euro_standard),
align = "ccccc",
format.args = list(big.mark = ",")
) %>%
kable_minimal(full_width = F, html_font = "Cambria") %>%
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T,
position = "center",
font_size = 20
) %>%
pack_rows(paste(names(table_list[i])), 1, nrow(table_list[[1]]))
# Append the kable to the list
table_kables[[i]] <- kbl_tbl
}
return(table_kables)
}
