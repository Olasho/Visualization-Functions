barchart <- function(df, x, title) {
require(plotly)
# Calculate frequency count of categories
freq_count <- table(df[[x]])
# Convert frequency count to a data frame
df_freq <- as.data.frame(freq_count)
colnames(df_freq) <- c("Categories", "Frequency")
# Plot bar graph
p <- plot_ly(df_freq, x = ~Categories, y = ~Frequency, type = "bar", marker = list(color = 'red', opacity = 0.7)) %>%
layout(title = title,
xaxis = list(title = "Categories"),
yaxis = list(title = "Frequency"),
showlegend = FALSE,
bargap = 0.05)
return(p)
}
barchart <- function(df, x, title) {
require(plotly)
# Calculate frequency count of categories
freq_count <- table(df[[x]])
# Convert frequency count to a data frame
df_freq <- as.data.frame(freq_count)
colnames(df_freq) <- c("Categories", "Frequency")
# Plot bar graph
p <- plot_ly(df_freq, x = ~Categories, y = ~Frequency, type = "bar", marker = list(color = 'red', opacity = 0.7)) %>%
layout(title = title,
xaxis = list(title = "Categories"),
yaxis = list(title = "Frequency"),
showlegend = FALSE,
bargap = 0.05)
return(p)
}
barchart <- function(df, x, title) {
require(ggplot2)
require(plotly)
# Calculate frequency count of categories
freq_count <- table(df[[x]])
# Convert frequency count to a data frame
df_freq <- as.data.frame(freq_count)
colnames(df_freq) <- c("Categories", "Frequency")
# Create ggplot object
p <- ggplot(df_freq, aes_string(x = "Categories", y = "Frequency")) +
geom_bar(fill = "red", alpha = 0.7, stat = "identity") +
geom_text(aes(label = Frequency), vjust = -0.5) +
labs(title = title,
x = "Categories",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
}
